# vim: set filetype=yaml:
---
#base_url: http://test-results.marathon.mesos/TARS
base_url: http://188.184.162.83/TARS
architectures:
  slc5_x86-64:
    CVMFS: x86_64-2.6-gnu-4.1.2
    AliEn: Linux-x86_64
    RPM: el5.x86_64
cvmfs_repository: alice.cern.ch
rpm_repo_dir: /work/rpmrepo
package_dir: /cvmfs/%(repo)s/%(arch)s/Packages/%(package)s/%(version)s
modulefile: /cvmfs/%(repo)s/%(arch)s/Modules/modulefiles/%(package)s/%(version)s
cvmfs_script: |
  #!/bin/bash -ex
  set -o pipefail
  cd /cvmfs/%(repo)s
  mkdir -p %(arch)s/Packages
  cd %(arch)s/Packages
  curl --silent -L %(url)s | tar --strip-components=2 -xzf -
  # Dereference hardlinks: CVMFS does not support them across dirs
  find %(pkgdir)s -not -type d -links +1 -exec \
    sh -ec 'cp -ip "{}" "{}".__DEREF__; mv "{}".__DEREF__ "{}"' \;
  export WORK_DIR=$PWD
  export PKGPATH=%(package)s/%(version)s
  sh -e %(pkgdir)s/relocate-me.sh
  MODULESRC=%(pkgdir)s/etc/modulefiles/%(package)s
  MODULEDST=%(modulefile)s
  [[ -e $MODULESRC ]]
  mkdir -p $(dirname $MODULEDST)
  cp -v $MODULESRC $MODULEDST
alien_script: |
  #!/bin/bash -ex
  set -o pipefail
  TMPDIR=$(mktemp -d /tmp/aliPublish.XXXXX)
  TORDIR=/var/packages/download
  TORNOTIFY=/var/packages/NEWFILE
  mkdir -p $TMPDIR
  cd $TMPDIR
  curl --silent -L %(url)s | tar --strip-components=3 -xzf -
  TAR=$(echo %(package)s|tr '[:upper:]' '[:lower:]')_%(version)s.%(arch)s.tar.gz
  tar czf $TAR %(version)s/
  rm -rf %(version)s/
  DEPS=%(dependencies)s
  alien -exec packman define %(package)s %(version)s $TMPDIR/$TAR ${DEPS:+dependencies=$DEPS} -vo -platform %(arch)s -se ALICE::CERN::EOS
  cp -f $TMPDIR/$TAR $TORDIR/$TAR
  chmod a=rw $TORDIR/$TAR
  touch $TORNOTIFY
  alien -exec addMirror /alice/packages/%(package)s/%(version)s/%(arch)s no_se torrent://alitorrent.cern.ch/torrents/$TAR.torrent
  rm -rf $TMPDIR
rpm_script: |
  #!/bin/bash -ex
  set -o pipefail
  INSTALLPREFIX=/opt/alisw
  TMPDIR="%(workdir)s"
  FULLVER="%(version)s"
  VERSION=${FULLVER%%-*}
  REVISION=${FULLVER##*-}
  FULLARCH="%(arch)s"
  FLAVOUR=${FULLARCH%%.*}
  ARCHITECTURE=${FULLARCH##*.}
  cd $TMPDIR
  curl --silent -L %(url)s | tar --strip-components=2 -xzf -
  DEPS=()
  DEPS+=("--depends" "environment-modules")
  for D in %(dependencies)s; do
    DEPS+=("--depends" "$D = 1-1.$FLAVOUR")
  done
  AFTER_INSTALL=$TMPDIR/after_install.sh
  AFTER_REMOVE=$TMPDIR/after_remove.sh
  cat > $AFTER_INSTALL <<EOF
  #!/bin/bash -e
  export WORK_DIR=$INSTALLPREFIX
  cd \$WORK_DIR
  export PKGPATH=$FLAVOUR/%(package)s/%(version)s
  source \$PKGPATH/relocate-me.sh
  mkdir -p $INSTALLPREFIX/$FLAVOUR/modulefiles/%(package)s
  ln -nfs ../../%(package)s/%(version)s/etc/modulefiles/%(package)s \
          $INSTALLPREFIX/$FLAVOUR/modulefiles/%(package)s/%(version)s
  mkdir -p $INSTALLPREFIX/$FLAVOUR/modulefiles/BASE
  echo -e "#%%Module\nsetenv BASEDIR $INSTALLPREFIX/$FLAVOUR" > \
          $INSTALLPREFIX/$FLAVOUR/modulefiles/BASE/1.0
  EOF
  cat > $AFTER_REMOVE <<EOF
  #!/bin/bash
  ( rm -f $INSTALLPREFIX/$FLAVOUR/modulefiles/%(package)s/%(version)s
    rmdir $INSTALLPREFIX/$FLAVOUR/modulefiles/%(package)s
    find $INSTALLPREFIX/$FLAVOUR/%(package)s/%(version)s -depth -type d \
         -exec rmdir '{}' \;
    rmdir $INSTALLPREFIX/$FLAVOUR/%(package)s
    if [[ "\$(find $INSTALLPREFIX/$FLAVOUR \
                   -mindepth 1 -maxdepth 1 -type d \
                   -not -name modulefiles )" == "" ]]; then
      rm -rf $INSTALLPREFIX/$FLAVOUR
      rmdir $INSTALLPREFIX
    fi
  ) 2> /dev/null
  true
  EOF
  # We must put the full version in the package name to allow multiple versions
  # to be installed at the same time, see [1]
  # [1] http://www.rpm.org/wiki/PackagerDocs/MultipleVersions
  fpm -s dir \
      -t rpm \
      --force \
      "${DEPS[@]}" \
      --prefix $INSTALLPREFIX/$FLAVOUR \
      --architecture $ARCHITECTURE \
      --version 1 \
      --iteration 1.$FLAVOUR \
      --name alisw-%(package)s+%(version)s \
      --after-install $AFTER_INSTALL \
      --after-remove $AFTER_REMOVE \
      %(package)s/
  RPM="alisw-%(package)s+%(version)s-1-1.%(arch)s.rpm"
  [[ -e $RPM ]]
  mkdir -vp %(repodir)s
  mv -v $RPM %(repodir)s
notification_email:
  server: cernmx.cern.ch
  package_format: "  VO_ALICE@%(package)s::%(version)s\n"
  success:
    body: |
      Dear ALICE fellows,

        %(package)s %(version)s was registered and it is ready to be used. While
      there is a delay of up to two hours before the tag is propagated on CVMFS,
      test trains can be run right away.

      This package has the following dependencies:

      %(dependencies_fmt)s
      If you launch Grid jobs, it is sufficient to specify this single package
      along with the default Grid configuration like this:

        Packages = {
          "VO_ALICE@APISCONFIG::V1.1x",
          "VO_ALICE@%(package)s::%(version)s"
        }

      Do not specify explicitly any of the other dependencies: all the correct ones
      will be automatically available in the job's environment.

      You can use the CVMFS package from lxplus like this:

        source /cvmfs/alice.cern.ch/etc/login.sh
        alienv enter VO_ALICE@%(package)s::%(version)s

      For inquiries and problems use our ALICE JIRA: https://alice.its.cern.ch/
      Full list of packages available on the Grid: http://alimonitor.cern.ch/packages/

      Enjoy,
      --
      The ALICE Build Infrastructure
    subject: "[AliBuild] %(package)s %(version)s on the Grid"
    from: "ALICE Builder <alice-analysis-operations@cern.ch>"
    to: alice-analysis-operations@cern.ch
  failure:
    body: |
      CVMFS publishing failed for %(package)s %(version)s. Please have a look.

      Cheers,
      --
      The ALICE Build Infrastructure
    subject: "[CVMFS] Failed: %(package)s %(version)s"
    from: "ALICE Builder <noreply@cern.ch>"
    to:
     - dario.berzano@cern.ch
     - giulio.eulisse@cern.ch
auto_include_deps: True
# Example of include before excluding
include:
  AliPhysics:
   - ^vAN-201[0-9][0-1][0-9][0-3][0-9]-[0-9]+$
   - ^v5-0[67]-[0-9]+-01-[0-9]+$
   - ^v5-06-[0-9]+-01-dmesonaod[0-9]+[a-z]*-[0-9]+$
  AliRoot:
   - ^v5-0[45]-Rev-.+$
  GEANT3:
   - ^v2-0-[0-9]+$
   - ^v1-15[a-z]+-0-[0-9]+$
  GEANT4_VMC:
   - ^v3-.+$
exclude:
  AliPhysics:
   - ^vAN-20150910.*$
   - ^vAN-2015090.*$
  GEANT3:
   - ^v2-0-[1-6]$
filter_order: include,exclude

# Example of exclude before including: sync all, exclude AliRoot-test
#exclude:
#  AliRoot-test: True
#include:
#filter_order: exclude,include
