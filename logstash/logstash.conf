input {
  redis {
    host => "redis.marathon.mesos"
    key  => "logstash"
    data_type => "list"
  }
  #stdin {}
}

filter {
  if [message][0] =~ /Started by user/ {
    mutate {
      add_field => {"status" => "STARTED" }
      add_field => {"[@metadata][type]" => "status" }
    }
  }
  else if [message][0] =~ /^Finished/ {
    grok {
      match => {"[message][0]" => "Finished: (?<status>[A-Z]+)"}
    }
    mutate {
      add_field => {"[@metadata][type]" => "status" }
    }
  }
  else if [message][0] =~ /^DEBUG: Commit hash for/ {
    grok {
      match => {"[message][0]" => "DEBUG: Commit hash for (?<sources[repo]>[^@]*)@(?<sources[tag]>[^ ]*) is (?<sources[hash]>[^ ]*)"}
    }
  }
  else if [message][0] =~ /^DEBUG: Main package is / {
    grok {
      match => {"[message][0]" => "DEBUG: Main package is (?<main[package]>[^ ]+) using (?<main[url]>[^ ]+)@(?<main[tag]>[^ ]*) \((?<main[hash]>[^)]+)\)"}
    }
  }
  else {
    grok {
      break_on_match => false
      match => {"[message][0]" => "DEBUG:[ ]+(?<filename>[^:]*):(?<line>[0-9]+):(?<column>[0-9]+): warning:[ ]+(?<what>.*)"}
      match => {"[message][0]" => "DEBUG:[ ]+(?<filename>[^:]*):(?<line>[0-9]+):(?<column>[0-9]+): error:[ ]+(?<what>.*)"}
    }
  }
  mutate {
    remove_field => ["message"]
  }

  if "_grokparsefailure" in [tags] {
    drop { }
  }
}

output {
  elasticsearch {
    host => ["elasticsearch.marathon.mesos"]
    port => "9200"
    protocol => "http"
  }
  #stdout { codec => rubydebug }
}
